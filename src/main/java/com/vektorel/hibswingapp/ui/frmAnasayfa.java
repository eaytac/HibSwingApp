package com.vektorel.hibswingapp.ui;

import com.vektorel.hibswingapp.entity.Kullanici;
import com.vektorel.hibswingapp.entity.Ogrenci;
import com.vektorel.hibswingapp.service.KullaniciService;
import com.vektorel.hibswingapp.service.OgrenciService;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;

public class frmAnasayfa extends javax.swing.JFrame {

    public static int tabloDatasi=0;
    //1:Ogrenci 2:kul
    Kullanici kullanici;
    KullaniciService kullaniciService = new KullaniciService();
    OgrenciService ogrenciService = new OgrenciService();

    public frmAnasayfa(Kullanici kullanici) {
        initComponents();
        setLocationRelativeTo(null);
        this.kullanici = kullanici;
        gizle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAnasayfa = new javax.swing.JPanel();
        txtAra = new javax.swing.JTextField();
        btnAra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnasayfa = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuKullaniciIslemleri = new javax.swing.JMenu();
        mnuKullaniciListe = new javax.swing.JMenuItem();
        mnuKullaniciEkle = new javax.swing.JMenuItem();
        mnuKullaniciSil = new javax.swing.JMenuItem();
        mnuKullaniciGuncelle = new javax.swing.JMenuItem();
        mnuOgrenciIslemleri = new javax.swing.JMenu();
        mnuOgrenciListesi = new javax.swing.JMenuItem();
        mnuOgrenciEkle = new javax.swing.JMenuItem();
        mnuOgrenciSil = new javax.swing.JMenuItem();
        mnuOgrenciGuncelle = new javax.swing.JMenuItem();
        mnuCikis = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAra.setText("ARA");
        btnAra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAraActionPerformed(evt);
            }
        });

        tblAnasayfa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAnasayfa);

        javax.swing.GroupLayout pnlAnasayfaLayout = new javax.swing.GroupLayout(pnlAnasayfa);
        pnlAnasayfa.setLayout(pnlAnasayfaLayout);
        pnlAnasayfaLayout.setHorizontalGroup(
            pnlAnasayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnasayfaLayout.createSequentialGroup()
                .addComponent(txtAra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAra, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        pnlAnasayfaLayout.setVerticalGroup(
            pnlAnasayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnasayfaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnasayfaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAra, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1))
        );

        mnuKullaniciIslemleri.setText("Kullanıcı İşlemleri");

        mnuKullaniciListe.setText("Kullanıcı Listesi");
        mnuKullaniciListe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKullaniciListeActionPerformed(evt);
            }
        });
        mnuKullaniciIslemleri.add(mnuKullaniciListe);

        mnuKullaniciEkle.setText("Kullanıcı Ekle");
        mnuKullaniciEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKullaniciEkleActionPerformed(evt);
            }
        });
        mnuKullaniciIslemleri.add(mnuKullaniciEkle);

        mnuKullaniciSil.setText("Kullanıcı Sil");
        mnuKullaniciSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKullaniciSilActionPerformed(evt);
            }
        });
        mnuKullaniciIslemleri.add(mnuKullaniciSil);

        mnuKullaniciGuncelle.setText("Kullanıcı Güncelle");
        mnuKullaniciGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKullaniciGuncelleActionPerformed(evt);
            }
        });
        mnuKullaniciIslemleri.add(mnuKullaniciGuncelle);

        jMenuBar1.add(mnuKullaniciIslemleri);

        mnuOgrenciIslemleri.setText("Öğrenci İşlemleri");

        mnuOgrenciListesi.setText("Öğrenci Listesi");
        mnuOgrenciListesi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciListesiActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciListesi);

        mnuOgrenciEkle.setText("Öğrenci Ekle");
        mnuOgrenciEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciEkleActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciEkle);

        mnuOgrenciSil.setText("Öğrenci Sil");
        mnuOgrenciSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciSilActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciSil);

        mnuOgrenciGuncelle.setText("Öğrenci Güncelle");
        mnuOgrenciGuncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOgrenciGuncelleActionPerformed(evt);
            }
        });
        mnuOgrenciIslemleri.add(mnuOgrenciGuncelle);

        jMenuBar1.add(mnuOgrenciIslemleri);

        mnuCikis.setText("Çıkış");
        jMenuBar1.add(mnuCikis);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAnasayfa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlAnasayfa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuKullaniciListeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKullaniciListeActionPerformed
        kullaniciTabloDoldur(null);
    }//GEN-LAST:event_mnuKullaniciListeActionPerformed

    private void mnuKullaniciEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKullaniciEkleActionPerformed
        frmKullaniciEkle ekle = new frmKullaniciEkle(this, true);
        ekle.setVisible(true);
        kullaniciTabloDoldur(null);
    }//GEN-LAST:event_mnuKullaniciEkleActionPerformed

    private void mnuKullaniciSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKullaniciSilActionPerformed
        if (tblAnasayfa.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int seciliKayit = tblAnasayfa.getSelectedRow();
        if (seciliKayit > -1) {
            int secim = JOptionPane.showConfirmDialog(rootPane, "Seçili kaydı silmek istediğinizden emin misiniz?", "Dikkat", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (secim == 0) {
                String value = tblAnasayfa.getValueAt(seciliKayit, 0).toString();
                Kullanici kullanici = kullaniciService.getById(new Long(value));
                kullaniciService.delete(kullanici);
                kullaniciTabloDoldur(null);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Lütfen silmek istediğiniz kaydı tablodan seçiniz!", "Kayıt Seçilmedi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnuKullaniciSilActionPerformed

    private void mnuKullaniciGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKullaniciGuncelleActionPerformed
        if (tblAnasayfa.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int seciliKayit = tblAnasayfa.getSelectedRow();
        if (seciliKayit > -1) {
            String value = tblAnasayfa.getValueAt(seciliKayit, 0).toString();
            Kullanici kullanici = kullaniciService.getById(new Long(value));
            frmKullaniciEkle guncelle = new frmKullaniciEkle(this, true, kullanici);
            guncelle.setVisible(true);
            kullaniciTabloDoldur(null);
        }
    }//GEN-LAST:event_mnuKullaniciGuncelleActionPerformed

    private void btnAraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAraActionPerformed
        String query = txtAra.getText();
        
        if(tblAnasayfa.getColumnName(1) == "Ad Soyad") {
            kullaniciTabloDoldur(query);
            txtAra.setText("");
        } else {
            ogrenciTabloDoldur(query);
            txtAra.setText("");
        }
    }//GEN-LAST:event_btnAraActionPerformed

    private void mnuOgrenciListesiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciListesiActionPerformed
        ogrenciTabloDoldur(null);
    }//GEN-LAST:event_mnuOgrenciListesiActionPerformed

    private void mnuOgrenciEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciEkleActionPerformed
        frmOgrenciEkle ogrenciEkle = new frmOgrenciEkle(this, true);
        ogrenciEkle.setVisible(true);
        ogrenciTabloDoldur(null);
    }//GEN-LAST:event_mnuOgrenciEkleActionPerformed

    private void mnuOgrenciSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciSilActionPerformed
        if (tblAnasayfa.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int seciliKayit = tblAnasayfa.getSelectedRow();
        if (seciliKayit > -1) {
            int secim = JOptionPane.showConfirmDialog(rootPane, "Seçili kaydı silmek istediğinizden emin misiniz?", "Dikkat", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (secim == 0) {
                String value = tblAnasayfa.getValueAt(seciliKayit, 0).toString();
                Ogrenci ogrenci = ogrenciService.getById(new Long(value));
                ogrenciService.delete(ogrenci);
                ogrenciTabloDoldur(null);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Lütfen silmek istediğiniz kaydı tablodan seçiniz!", "Kayıt Seçilmedi", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_mnuOgrenciSilActionPerformed

    private void mnuOgrenciGuncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuOgrenciGuncelleActionPerformed
        if (tblAnasayfa.getSelectedRowCount()> 1){
            JOptionPane.showMessageDialog(rootPane, "Lütfen sadece bir adet kayıt seçiniz!", "Fazla Kayıt Seçildi", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int seciliKayit = tblAnasayfa.getSelectedRow();
        if (seciliKayit > -1) {
            String value = tblAnasayfa.getValueAt(seciliKayit, 0).toString();
            Ogrenci ogrenci = ogrenciService.getById(new Long(value));
            frmOgrenciEkle guncelle = new frmOgrenciEkle(this, true, ogrenci);
            guncelle.setVisible(true);
            ogrenciTabloDoldur(null);
        }
    }//GEN-LAST:event_mnuOgrenciGuncelleActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAra;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mnuCikis;
    private javax.swing.JMenuItem mnuKullaniciEkle;
    private javax.swing.JMenuItem mnuKullaniciGuncelle;
    private javax.swing.JMenu mnuKullaniciIslemleri;
    private javax.swing.JMenuItem mnuKullaniciListe;
    private javax.swing.JMenuItem mnuKullaniciSil;
    private javax.swing.JMenuItem mnuOgrenciEkle;
    private javax.swing.JMenuItem mnuOgrenciGuncelle;
    private javax.swing.JMenu mnuOgrenciIslemleri;
    private javax.swing.JMenuItem mnuOgrenciListesi;
    private javax.swing.JMenuItem mnuOgrenciSil;
    private javax.swing.JPanel pnlAnasayfa;
    private javax.swing.JTable tblAnasayfa;
    private javax.swing.JTextField txtAra;
    // End of variables declaration//GEN-END:variables

    private void kullaniciTabloDoldur(String query) {
        goster();

        List<Kullanici> kullanicilar = kullaniciService.getAll(query);
        String[][] data = new String[kullanicilar.size()][3];

        for (int i = 0; i < kullanicilar.size(); i++) {
            data[i][0] = kullanicilar.get(i).getId().toString();
            data[i][1] = kullanicilar.get(i).getAdSoyad();
            data[i][2] = kullanicilar.get(i).getUsername();
        }

        tblAnasayfa.setModel(new javax.swing.table.DefaultTableModel(
                data,
                new String[]{
                    "No", "Ad Soyad", "Kullanıcı Adı"
                }
        ));
        tabloDatasi=1;
    }
    
    private void ogrenciTabloDoldur(String query) {
        goster();
        

        List<Ogrenci> ogrenciler = null;
        ogrenciler = ogrenciService.getAll(query);
                
        String[][] ogrenciData = new String[ogrenciler.size()][11];

        for (int i = 0; i < ogrenciler.size(); i++) {
            Ogrenci o = ogrenciler.get(i);
            
            ogrenciData[i][0] = o.getId().toString();
            ogrenciData[i][1] = o.getOkulNo();
            ogrenciData[i][2] = o.getAd();
            ogrenciData[i][3] = o.getSoyad();
            ogrenciData[i][4] = o.getAdres();
            
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
            if (o.getDogumTarihi() != null) {
                ogrenciData[i][5] = format.format(o.getDogumTarihi());
            }
            if (o.getOkulaBaslamaTarihi() != null) {
                ogrenciData[i][6] = format.format(o.getOkulaBaslamaTarihi());
            }
            
            ogrenciData[i][7] = (o.getCinsiyet() == 0 ? "Erkek" : "Kadın");  //Eğer cinsiyet 0 ise erkek, değil ise Kadın
            ogrenciData[i][8] = (o.getAktif() ? "Evet" : "Hayır");
            ogrenciData[i][9] = o.getTcKimlikNo().toString();
            
            if (o.getBolum() != null) {
                ogrenciData[i][10] = o.getBolum().getBolumAdi();
            }
        }

        tblAnasayfa.setModel(new javax.swing.table.DefaultTableModel(
                ogrenciData,
                new String[]{
                    "No", "Okul No", "Ad", "Soyad", "Adres", "Doğum Tarihi", "Okula Başlama Tarihi", "Cinsiyet", "Aktif", "TC Kimlik No", "Bölüm"
                }
        ));
        tabloDatasi=2;
    }

    private void gizle() {
//        tblAnasayfa.setVisible(false);
//        tblAnasayfa.getTableHeader().setVisible(false);
//        btnAra.setVisible(false);
//        txtAra.setVisible(false);
        pnlAnasayfa.setVisible(false);
    }

    private void goster() {
//        tblAnasayfa.setVisible(true);
//        tblAnasayfa.getTableHeader().setVisible(true);
//        btnAra.setVisible(true);
//        txtAra.setVisible(true);
        pnlAnasayfa.setVisible(true);
    }

}
